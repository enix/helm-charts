{{- if .Values.psp.create }}
{{- if .Values.secretsExporter.enabled }}
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ include "x509-certificate-exporter.secretsExporterName" . }}
  labels:
    {{- include "x509-certificate-exporter.labels" . | nindent 4 }}
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
  - ALL
  volumes:
  - 'secret'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
    - min: 1
      max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
    - min: 1
      max: 65535
  readOnlyRootFilesystem: true
{{- end }}
{{- with .Values.hostPathsExporter.daemonSets }}
{{- range $dsName, $dsDef := . }}
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ printf "%s-%s" (include "x509-certificate-exporter.fullname" $) $dsName }}
  labels:
    {{- include "x509-certificate-exporter.labels" $ | nindent 4 }}
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
  - ALL
  volumes:
  - 'hostPath'
  - 'secret'
  allowedHostPaths:
  {{- range default $.Values.hostPathsExporter.watchDirectories $dsDef.watchDirectories }}
  - pathPrefix: "{{ . | clean }}"
    readOnly: true
  {{- end }}
  {{- range default $.Values.hostPathsExporter.watchFiles $dsDef.watchFiles }}
  - pathPrefix: "{{ . | clean | dir }}"
    readOnly: true
  {{- end }}
  {{- range default $.Values.hostPathsExporter.watchKubeconfFiles $dsDef.watchKubeconfFiles }}
  - pathPrefix: "{{ . | clean | dir }}"
    readOnly: true
  {{- end }}
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
{{- end }}
{{- end }}
{{- end }}
